swagger: "2.0"
info:
  version: 1.0.0
  title: jaedye
  description: An API to interface with the Jaedye backend
  termsOfService: http://swagger.io/terms/
  contact:
    name: Yuan Yu Chuan
    email: yuchuan@u.nus.edu
    url: www.example.com
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: jaedye.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/facebook:
    get:
      description: Sends facebook authentication token in exchange for a user profile
      operationId: authFacebook
      parameters:
        - name: access_token
          in: query
          description: Facebook access token
          required: true
          type: string
      responses:
        200:
          description: User Profile response
          schema:
            $ref: '#/definitions/UserProfile'
        default:
          description: Unauthorized response
  /auth/google:
    get:
      description: Sends google authentication token in exchange for a user profile
      operationId: authGoogle
      parameters:
        - name: access_token
          in: query
          description: Google access token
          required: true
          type: string
      responses:
        200:
          description: User Profile response
          schema:
            $ref: '#/definitions/UserProfile'
        default:
          description: Unauthorized response
  /leaderboard:
    get:
      description: |
        Returns the leaderboard for the current user
      operationId: getLeaderboard
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Attempt response
          schema:
            type: array
            items:
              $ref: '#/definitions/Attempt'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /friends:
    get:
      description: |
        Returns the current user's list of friends
      operationId: getFriends
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Friends response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Add a new user as friend
      operationId: addFriend
      parameters:
        - name: Friend
          in: body
          description: User ID of Friend to add
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Friend Added
          schema:
            type: integer
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    get:
      description: Returns the user with the given ID
      operationId: find User by id
      parameters:
        - name: id
          in: path
          description: ID of User to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: User response
          schema:
            $ref: '#/definitions/UserProfile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /attempts:
    get:
      description: Gets the users' recent list of attempts
      operationId: deletePet
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          description: offset of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Attempt deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Sends and stores a new attempt
      operationId: createAttempt
      parameters:
        - name: attempt
          in: body
          description: new Attempt object
          required: true
          schema:
            $ref: '#/definitions/NewAttempt'
      responses:
        201:
          description: Attempt created
          schema:
            type: integer
            format: int32
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /challenges:
    get:
      description: Gets the list of available challenges
      operationId: getChallenges
      responses:
        200:
          description: List of challenges
          schema:
            type: array
            items:
              $ref: '#/definitions/Challenge'
  /challenge/{id}/accept:
    get:
      description: declines the challenge with the given ID
      operationId: declineChallenge
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Challenge response
          schema:
            $ref: '#/definitions/Challenge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /challenge/{id}/decline:
    get:
      description: accepts the challenge with the given ID
      operationId: acceptChallenge
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Challenge response
          schema:
            $ref: '#/definitions/Challenge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  UserProfile:
    allOf:
      - $ref: '#/definitions/User'
      - required:
        - provider
        - providerId
        - providerToken
        properties:
          provider:
            type: string
          providerId:
            type: string
          providerToken:
            type: string
  User:
    required:
      - name
      - email
      - id
    properties:
      name:
        type: string
      email:
        type: string
        format: email
      id:
        type: integer
  Attempt:
    allOf:
      - $ref: '#/definitions/NewAttempt'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewAttempt:
    required:
      - startTime
      - targetTime
      - actualTime
    properties:
      startTime:
        type: string
        format: datetime
      targetTime:
        type: integer
        description: Target time (in seconds)
      actualTime:
        type: integer
        description: Actual time spent focused (in seconds)
  Challenge:
    allOf:
      - $ref: '#/definitions/NewChallenge'
      - required: [leaderboard, accepted]
        properties:
          leaderboard:
            type: array
            items:
              $ref: '#/definitions/UserChallenge'
          winner:
            $ref: '#/definitions/User'
          accepted:
            type: boolean
  NewChallenge:
    required:
      - name
      - startDate
      - endDate
      - description
    properties:
      name:
        type: string
      description:
        type: string
      startDate:
        type: string
        format: datetime
        description: Date/Time at which the challenge will start
      endDate:
        type: string
        format: datetime
        description: Date/Time at which the challenge will end
      people:
        type: array
        items:
          type: integer
        description: Array of user IDs to add to the challenge
  UserChallenge:
    required:
      - userId
      - time
    properties:
      userId:
        type: integer
      time:
        type: integer
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string